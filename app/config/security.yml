# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:

    encoders:
        AppBundle\Entity\User: bcrypt

    providers:
        # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
        # In this example, users are stored via Doctrine in the database
        # To see the users at src/App/DataFixtures/ORM/LoadFixtures.php
        # To load users from somewhere else: https://symfony.com/doc/current/security/custom_provider.html
        database_users:
            entity: { class: AppBundle\Entity\User, property: username }

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            anonymous: true

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            #form_login: ~

            form_login:
                # The name of the route where the login form lives
                # When the user tries to access a protected page, they are redirected here
                login_path: web_login_controller_login
                # The page users are redirect to when there is no previous page stored in the
                # session (for example when the users access directly to the login page).
                default_target_path: web_home_controller_homepage

            logout:
                # The route name the user can go to in order to logout
                path: web_login_controller_logout
                # The name of the route to redirect to after logging out
                target: web_home_controller_homepage

    access_control:
        # this is a catch-all for the admin area
        # additional security lives in the controllers
        - { path: '^/admin', roles: ROLE_ADMIN }